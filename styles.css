/* 1. Use a more-intuitive box-sizing model */
*, *::before, *::after {
    box-sizing: border-box;
  }
  /* 2. Remove default margin */
  * {
    margin: 0;
  }
  body {
    /* 3. Add accessible line-height */
    line-height: 1.5;
    /* 4. Improve text rendering */
    -webkit-font-smoothing: antialiased;
  }
  /* 5. Improve media defaults */
  img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
  }
  /* 6. Inherit fonts for form controls */
  input, button, textarea, select {
    font: inherit;
  }
  /* 7. Avoid text overflows */
  p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
  }
  /* 8. Improve line wrapping */
  p {
    text-wrap: pretty;
  }
  h1, h2, h3, h4, h5, h6 {
    text-wrap: balance;
  }
  /*
    9. Create a root stacking context
  */
  #root, #__next {
    isolation: isolate;
  }
  
  /* CSS Reset above */

  

  h1, h2 {
    text-align: center;
  }

  body {
    font-family:Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
    display: flex;
    justify-content: center;
    
  }
  .closeBtn {
    position: absolute;
    top: 15px;
    right: 15px;
    border-radius: 50%;
    background-color: #00000036;
    border: transparent;
    color: white;
  }
  .closeBtn::before {
    content: "Close";
    position: absolute;
    right: 27px;
    color: #00000036;
  }
  .closeBtn:hover {
  background-color: black;
  }
  .closeBtn:hover::before {
    color: black;
  }

  .names {
    position: absolute;
    width: 500px;
    height: 500px;
    background-color: aliceblue;
    box-shadow: #ccc 10px 10px;
    padding: 50px;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
  }

  .names input[type="text"] {
    width: 100%;
  }

  #hidden {
    visibility: hidden;
  }

  .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 30px;

  }

  td{
    outline: black solid 1px;
    text-align: center;
    font-size: 4rem;
    min-width: 100px;
    height: 100px;
  }

  .empty {
    color: transparent;
  }

  .positionTaken {
    color: black;
  }

  .gameStatus,
  .gameMessage {
    font-size: 3rem;
  }

  .gameboard {
    margin: 30px;
  }

  .position {
    cursor: pointer;
    background-color: aliceblue;
  }

  input[type="submit"],
  .restartBtn {
    color: aliceblue;
    text-align: center;
    height: 35px;
    width: 170px;
    background-color: rgb(28, 142, 255);
    border-radius: 20px;
    outline: transparent;
    border: none;
    cursor: pointer;
  }
  input[type="submit"],
  .restartBtn:hover {
    font-weight: bold;
  }

  /*dark mode */

  .darkMode {
    background-color: rgb(0, 0, 0);
    color: greenyellow;
  }

  td.darkMode {
    background-color: black;
    outline: greenyellow 1px solid;
  }

  button.darkMode {
    background-color: greenyellow;
    color: black;

  }

  /*Toggle */
  .switch {
    position: absolute;
    top: 10px;
    left: 20px;
    display: inline-block;
    width: 60px;
    height: 34px;
  }
  
  .switch input { 
    opacity: 0;
    width: 0;
    height: 0;
  }
  
  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    -webkit-transition: .4s;
    transition: .4s;
  }
  
  .slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
  }
  
  input:checked + .slider {
    background-color: greenyellow;
  }
  
  input:checked + .slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
  }
